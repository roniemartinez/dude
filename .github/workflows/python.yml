# This workflow will install Python dependencies, run tests and lint with a variety of Python versions and deploy to TestPyPI/PyPI
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python

on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - 'master'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
#        os: [ ubuntu-latest, macos-latest, windows-latest ]
        os: [ ubuntu-latest ]
        python-version: [ '3.7', '3.8', '3.9', '3.10' ]
        include:
          - os: ubuntu-latest
            pip-cache: ~/.cache/pip
            poetry-cache: ~/.cache/pypoetry
#          - os: macos-latest
#            pip-cache: ~/Library/Caches/pip
#            poetry-cache: ~/Library/Caches/pypoetry
#          - os: windows-latest
#            pip-cache: ~\AppData\Local\pip\Cache
#            poetry-cache: ~\AppData\Local\pypoetry\Cache
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        with:
          path: ${{ matrix.pip-cache }}
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-
      - uses: actions/cache@v2
        with:
          path: ${{ matrix.poetry-cache }}
          key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-poetry-
      - uses: actions/cache@v2
        with:
          path: .mypy_cache
          key: ${{ runner.os }}-${{ matrix.python-version }}-mypy-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-mypy-
      - uses: actions/cache@v2
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-${{ matrix.python-version }}-ms-playwright-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-ms-playwright-
      - name: Install dependencies
        run: |
          make install-actions
      - name: Lint
        run: |
          make lint
      - name: Test
        run: |
          make test
#      - name: Upload Code Coverage
#        env:
#          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
#        run: |
#          poetry run codecov

#  testpypi:
#    needs: [ test ]
#    if: always() && !(github.ref == 'refs/heads/master' || startsWith(github.head_ref, 'dependabot/pip/') )
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: '3.x'
#      - name: Install dependencies
#        run: |
#          make install-actions
#      - name: Build package
#        run: |
#          poetry config repositories.testpypi https://test.pypi.org/legacy/
#          poetry config http-basic.testpypi ${{ secrets.TEST_PYPI_USER }} ${{ secrets.TEST_PYPI_PASS }}
#          poetry build
#      - name: Publish package
#        run: |
#          poetry publish -r testpypi
#
#  pypi:
#    needs: [ test ]
#    if: always() && github.ref == 'refs/heads/master'
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: '3.x'
#      - name: Install dependencies
#        run: |
#          make install-actions
#      - name: Build package
#        run: |
#          poetry config http-basic.pypi ${{ secrets.PYPI_USER }} ${{ secrets.PYPI_PASS }}
#          poetry build
#      - name: Publish package
#        run: |
#          poetry publish
